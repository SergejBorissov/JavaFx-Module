package testFx;

import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.scene.Scene;
import javafx.scene.chart.*;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;

/**
 * @author Sergej Borissov
 * 
 * BubbleChart mit zwei Slidern
 * X und Y Achse verr√§ndern und Listener
 * dynamisch binden
 */


public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception{
        primaryStage.setTitle("BubbleChart wert mit zwei Slidern binden");

        VBox pane = new VBox();
        pane.setMaxSize(700,700);


        Slider slider = new Slider();
        slider.setMax(100);
        slider.setMin(-100);

        Slider slider2 = new Slider();
        slider2.setMax(100);
        slider2.setMin(-100);


        NumberAxis xAxis = new NumberAxis();
        NumberAxis yAxis = new NumberAxis();

        BubbleChart<Number, Number> bubbleChart = new BubbleChart<>(xAxis,yAxis);
        bubbleChart.setPrefSize(500,500);


        XYChart.Series<Number, Number> series1 = new XYChart.Series<Number, Number>();

        XYChart.Data<Number, Number> data1 = new XYChart.Data<Number, Number>(1,2,3);
        XYChart.Data<Number, Number> data2 = new XYChart.Data<Number, Number>(2,32,2);
        XYChart.Data<Number, Number> data3 = new XYChart.Data<Number, Number>(3,34,8);
        series1.getData().addAll(data1,data2,data3);
        bubbleChart.getData().add(series1);

        pane.getChildren().addAll(bubbleChart,slider,slider2);


        slider.valueProperty().addListener(new ChangeListener<Number>() {
            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {
                //data1.YValueProperty().bind(slider.valueProperty());
                data2.XValueProperty().bind(slider.valueProperty());
            }
        });

        slider2.valueProperty().addListener(new ChangeListener<Number>() {
            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue){
                data2.YValueProperty().bind(slider2.valueProperty());
            }
        });


        primaryStage.setScene(new Scene(pane));
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
