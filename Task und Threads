package testFx;

import javafx.application.Application;
import javafx.beans.binding.Bindings;
import javafx.concurrent.Task;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;



public class Main extends Application{



    public static void main(String[] args) {

        launch(args);
    }

    @Override
    public void start(Stage primaryStage) throws Exception {



        primaryStage.setTitle("Task, Threads");

        HBox hBox = new HBox();

        Button button = new Button();
        TextArea textArea = new TextArea();

        button.setText("Go");
        final Task<Integer> task = new Task<Integer>(){
            @Override
            protected Integer call() throws Exception{
                int iterationen;
                for(iterationen = 0; iterationen < 100000; iterationen++){
                    Thread.sleep(100);
                    updateProgress(iterationen, 100000);
                }
                return iterationen;
            }
        };

        button.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                textArea.textProperty().bind(
                        Bindings.concat("Progress",
                                        task.progressProperty().multiply(100),"%"));
                Thread thread = new Thread(task);
                thread.start();

            }
        });

        hBox.getChildren().addAll(button, textArea);



        primaryStage.setScene(new Scene(hBox));

        primaryStage.show();

    }
}
